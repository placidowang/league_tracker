{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 4/league_tracker/frontend/src/containers/MainContainer.js\";\nimport React from 'react';\nimport SummonerContainer from './SummonerContainer.js';\nimport ChampionsContainer from './ChampionsContainer.js';\nimport Login from '../components/Login';\nimport SignUp from '../components/SignUp';\nimport NavBar from '../components/NavBar';\nimport ChampionInfo from '../components/ChampionInfo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nexport default class MainContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.filterAndSortChampions = () => {\n      let newDisplayChampions = []; //search\n\n      this.state.champions.forEach(champion => {\n        if (champion.name.toLowerCase().includes(this.state.championsSearchTerm.toLowerCase())) newDisplayChampions.push(champion);\n      }); //filter\n      //sort\n\n      switch (this.state.championsSortType) {\n        case \"alphabetically\":\n          newDisplayChampions.sort((a, b) => a.name.localeCompare(b.name));\n          break;\n\n        default:\n      } //display\n\n\n      this.setState({\n        displayChampions: newDisplayChampions\n      });\n    };\n\n    this.searchChampions = term => {\n      this.setState({\n        championsSearchTerm: term\n      }, () => this.displayChampions());\n    };\n\n    this.sortChampions = type => {\n      this.setState({\n        championsSortType: type\n      }, () => this.displayChampions());\n    };\n\n    this.filterChampionsByRole = role => {};\n\n    this.searchSummoner = summonerName => {\n      let obj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        },\n        body: JSON.stringify({\n          summonerName\n        })\n      };\n      fetch('http://localhost:3000/search_summoner', obj).then(resp => resp.json()).then(summoner => this.setState({\n        summoner\n      }));\n    };\n\n    this.setChampionId = championId => {\n      fetch(`http://localhost:3000/champions/${championId}`).then(res => res.json()).then(champion => this.setState({\n        displayChampion: champion\n      }));\n    };\n\n    this.checkForLogin = () => {\n      let obj = {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      };\n      fetch(\"http://localhost:3000/summoner_profiles\", obj).then(res => res.json()).then(data => {\n        let summonerLoginStatus = data.errors ? {\n          errors: data.errors\n        } : {};\n        this.setState({\n          summonerLoginStatus\n        });\n      });\n    };\n\n    this.displayMessage = message => {\n      let login_status = message === \"Login Success\" ? true : false;\n      this.setState({\n        display_message: true,\n        message_class: \"alert alert-success fade\",\n        message_text: message,\n        login_status\n      });\n      setTimeout(() => {\n        this.setState({\n          display_message: false,\n          message_class: \"\",\n          message_text: \"\",\n          summoner: {}\n        });\n      }, 3000);\n      ;\n    };\n\n    this.state = {\n      summonerProfile: {},\n      // setState when searching API for a specific summoner profile\n      champions: [],\n      displayChampions: [],\n      loadingChampions: true,\n      displayChampion: {},\n      championsSearchTerm: \"\",\n      championsSortType: \"\",\n      championsRoleFilters: [],\n      championsDifficultyFilter: [],\n      display_message: false,\n      message_class: \"\",\n      message_text: \"\",\n      login_status: false,\n      summoner: {},\n      summonerLoginStatus: {\n        errors: \"Please Login!\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    localStorage.clear();\n    fetch('http://localhost:3000/champions').then(r => r.json()).then(champions => {\n      this.setState({\n        champions: champions,\n        displayChampions: champions\n      }, () => this.setState({\n        loadingChampions: false\n      }));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.message_class} message`,\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, this.state.display_message ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 43\n      }\n    }, this.state.message_text) : \"\"), /*#__PURE__*/React.createElement(NavBar, {\n      displayMessage: this.displayMessage,\n      login_status: this.state.login_status,\n      checkForLogin: this.checkForLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routerProps => /*#__PURE__*/React.createElement(Login, Object.assign({}, routerProps, {\n        displayMessage: this.displayMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: SignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/champion\",\n      render: routerProps => /*#__PURE__*/React.createElement(ChampionInfo, Object.assign({}, routerProps, {\n        displayChampion: this.state.displayChampion,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/summoner\",\n      render: routerProps => /*#__PURE__*/React.createElement(SummonerContainer, Object.assign({}, routerProps, {\n        searchSummoner: this.searchSummoner,\n        summoner: this.state.summoner,\n        summonerLoginStatus: this.state.summonerLoginStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/champions\",\n      render: routerProps => /*#__PURE__*/React.createElement(ChampionsContainer, Object.assign({}, routerProps, {\n        champions: this.state.displayChampions,\n        loadingChampions: this.state.loadingChampions,\n        setChampionId: this.setChampionId,\n        searchChampions: this.searchChampions,\n        championsSearchTerm: this.state.championsSearchTerm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 4/league_tracker/frontend/src/containers/MainContainer.js"],"names":["React","SummonerContainer","ChampionsContainer","Login","SignUp","NavBar","ChampionInfo","BrowserRouter","Router","Route","MainContainer","Component","constructor","filterAndSortChampions","newDisplayChampions","state","champions","forEach","champion","name","toLowerCase","includes","championsSearchTerm","push","championsSortType","sort","a","b","localeCompare","setState","displayChampions","searchChampions","term","sortChampions","type","filterChampionsByRole","role","searchSummoner","summonerName","obj","method","headers","Authorization","localStorage","token","body","JSON","stringify","fetch","then","resp","json","summoner","setChampionId","championId","res","displayChampion","checkForLogin","data","summonerLoginStatus","errors","displayMessage","message","login_status","display_message","message_class","message_text","setTimeout","summonerProfile","loadingChampions","championsRoleFilters","championsDifficultyFilter","componentDidMount","clear","r","render","routerProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SummonerContainer from './SummonerContainer.js'\nimport ChampionsContainer from './ChampionsContainer.js'\nimport Login from '../components/Login'\nimport SignUp from '../components/SignUp'\nimport NavBar from '../components/NavBar'\nimport ChampionInfo from '../components/ChampionInfo'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\n\nexport default class MainContainer extends React.Component {\n  constructor() {\n    super()\n\n    this.state={\n      summonerProfile: {}, // setState when searching API for a specific summoner profile\n      champions: [],\n      displayChampions: [],\n      loadingChampions: true,\n      displayChampion: {},\n      championsSearchTerm: \"\",\n      championsSortType: \"\",\n      championsRoleFilters: [\n\n      ],\n      championsDifficultyFilter: [],\n      display_message: false,\n      message_class: \"\",\n      message_text: \"\",\n      login_status: false,\n      summoner: {},\n      summonerLoginStatus: {errors: \"Please Login!\"}\n    }\n  }\n\n  componentDidMount() {\n    localStorage.clear()\n    fetch('http://localhost:3000/champions')\n    .then(r => r.json())\n    .then(champions => {\n      this.setState({\n        champions: champions,\n        displayChampions: champions\n      }, ()=>this.setState({ loadingChampions: false }))\n    })\n  }\n\n  filterAndSortChampions = () => {\n    let newDisplayChampions = []\n\n    //search\n    this.state.champions.forEach(champion => {if (champion.name.toLowerCase().includes(this.state.championsSearchTerm.toLowerCase())) newDisplayChampions.push(champion)})\n\n    //filter\n\n\n    //sort\n    switch (this.state.championsSortType) {\n      case \"alphabetically\":\n        newDisplayChampions.sort((a,b) => a.name.localeCompare(b.name))\n        break\n      default:\n    }\n\n    //display\n    this.setState({\n      displayChampions: newDisplayChampions\n    })\n  }\n\n  // consider using debounce\n  searchChampions = (term) => {\n    this.setState({ championsSearchTerm: term },\n      ()=>this.displayChampions())\n  }\n  \n  sortChampions = (type) => {\n    this.setState({ championsSortType: type },\n      ()=>this.displayChampions())\n  }\n\n  filterChampionsByRole = (role) => {\n\n  }\n\n\n  // searchSummoner = () => {\n  //   let obj = {\n  //     method: \"GET\",\n  //     headers: {\n  //       Authorization: `Bearer ${localStorage.token}`\n  //     }\n  //   }\n  //   fetch('http://localhost:3000/search_summoner',obj)\n  //     .then(resp => resp.json())\n  //     .then(summoner => console.log(summoner))\n  // }\n\n  searchSummoner = (summonerName) => {\n    let obj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        summonerName\n      })\n    }\n    fetch('http://localhost:3000/search_summoner',obj)\n      .then(resp => resp.json())\n      .then(summoner => this.setState({summoner}))\n  }\n  \n  setChampionId = (championId) => {\n    fetch(`http://localhost:3000/champions/${championId}`)\n    .then(res => res.json())\n    .then(champion => this.setState({displayChampion: champion}))\n  }\n\n  checkForLogin = () => {\n    let obj = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    }\n    fetch(\"http://localhost:3000/summoner_profiles\",obj)\n    .then(res => res.json())\n    .then(data => {\n      let summonerLoginStatus = data.errors ? {errors: data.errors} : {}\n      this.setState({summonerLoginStatus})\n    })\n  }\n\n  displayMessage = (message) => {\n    let login_status = message === \"Login Success\" ? true : false\n    this.setState({\n      display_message: true, \n      message_class: \"alert alert-success fade\",\n      message_text: message,\n      login_status\n    })\n\n    setTimeout(() => {\n      this.setState({\n        display_message: false,\n        message_class: \"\",\n        message_text: \"\",\n        summoner: {}\n      })\n    }, 3000);;\n  }\n\n  render() {\n    return(\n      <Router>\n        <div>\n          <div \n            className={`${this.state.message_class} message`} \n            role=\"alert\"\n            >\n            {this.state.display_message ? <h4>{this.state.message_text}</h4> : \"\" }\n          </div>\n\n          <NavBar \n            displayMessage = {this.displayMessage} \n            login_status = {this.state.login_status} \n            checkForLogin = {this.checkForLogin}\n          />\n\n          <Route exact path = \"/login\" render = {(routerProps) => \n            <Login \n              {...routerProps} \n              displayMessage = {this.displayMessage}\n            />}\n          /> \n\n          <Route exact path = \"/signup\" component = {SignUp} /> \n\n          <Route exact path = \"/champion\" render = {(routerProps) => \n            <ChampionInfo \n              {...routerProps} \n              displayChampion={this.state.displayChampion}\n            />}\n          /> \n\n          <Route exact path = \"/summoner\" render = {(routerProps) => \n            <SummonerContainer {...routerProps} \n              searchSummoner = {this.searchSummoner} \n              summoner = {this.state.summoner}\n              summonerLoginStatus = {this.state.summonerLoginStatus}\n            />}\n          />\n\n          <Route exact path = \"/champions\" render = {(routerProps) => \n            <ChampionsContainer \n              {...routerProps}\n              champions={this.state.displayChampions}\n              loadingChampions={this.state.loadingChampions}\n              setChampionId={this.setChampionId}\n              searchChampions={this.searchChampions}\n              championsSearchTerm={this.state.championsSearchTerm}\n            />}\n          /> \n        </div>\n        </Router>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}