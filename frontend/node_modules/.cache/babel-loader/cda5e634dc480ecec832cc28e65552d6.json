{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 4/league_tracker/frontend/src/containers/MainContainer.js\";\nimport React from 'react';\nimport SummonerContainer from './SummonerContainer.js';\nimport ChampionsContainer from './ChampionsContainer.js';\nimport Login from '../components/Login';\nimport SignUp from '../components/SignUp';\nimport NavBar from '../components/NavBar';\nimport ChampionInfo from '../components/ChampionInfo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nexport default class MainContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.filterChampions = () => {\n      let filteredChampions = []; // search by name\n\n      if (this.state.championsSearchTerm) {\n        this.state.champions.forEach(champion => {\n          if (champion.name.toLowerCase().includes(this.state.championsSearchTerm.toLowerCase())) filteredChampions.push(champion);\n        });\n      } else {\n        filteredChampions = this.state.champions;\n      } // filter by role\n\n\n      if (this.state.championsRoleFilters.length > 0) {\n        filteredChampions = filteredChampions.filter(champion => this.checkIfChampionRolesMatchFilter(champion));\n      } // filter by difficulty\n\n\n      if (this.state.championsDifficultyFilter) {\n        let minDifficulty = 0;\n        let maxDifficulty = 0;\n\n        switch (this.state.championsDifficultyFilter) {\n          case 'easy':\n            minDifficulty = 1;\n            maxDifficulty = 3;\n            break;\n\n          case 'medium':\n            minDifficulty = 4;\n            maxDifficulty = 7;\n            break;\n\n          case 'hard':\n            minDifficulty = 8;\n            maxDifficulty = 10;\n            break;\n\n          default:\n        }\n\n        filteredChampions = filteredChampions.filter(champion => champion.info.difficulty >= minDifficulty && champion.info.difficulty <= maxDifficulty);\n      }\n\n      this.sortChampions(filteredChampions);\n    };\n\n    this.sortChampions = (newDisplayChampions = [...this.state.displayChampions]) => {\n      switch (this.state.championsSortType) {\n        case 'alphabetically':\n          newDisplayChampions.sort((a, b) => a.name.localeCompare(b.name));\n          break;\n\n        default:\n          newDisplayChampions.sort((a, b) => a.id - b.id);\n      }\n\n      console.log(newDisplayChampions);\n      this.setState({\n        displayChampions: newDisplayChampions\n      });\n    };\n\n    this.searchChampions = term => {\n      this.setState({\n        championsSearchTerm: term\n      }, () => this.filterChampions());\n    };\n\n    this.sortChampionsByType = type => {\n      if (this.state.championsSortType === type) {\n        this.setState({\n          championsSortType: \"\"\n        }, () => this.sortChampions());\n      } else {\n        this.setState({\n          championsSortType: type\n        }, () => this.sortChampions());\n      }\n    };\n\n    this.filterChampionsByRole = role => {\n      if (this.state.championsRoleFilters.includes(role)) {\n        for (const r of this.state.championsRoleFilters) {\n          if (r === role) {\n            this.state.championsRoleFilters.splice(this.state.championsRoleFilters.indexOf(r), 1);\n          }\n        }\n      } else {\n        this.state.championsRoleFilters.push(role);\n\n        if (this.state.championsRoleFilters.length > 2) {\n          this.state.championsRoleFilters.shift();\n        }\n      }\n\n      this.filterChampions();\n    };\n\n    this.checkIfChampionRolesMatchFilter = champion => {\n      return this.state.championsRoleFilters.every(r => champion.roles.includes(r));\n    };\n\n    this.filterChampionsByDifficulty = difficulty => {\n      if (this.state.championsDifficultyFilter === difficulty) {\n        this.setState({\n          championsDifficultyFilter: \"\"\n        }, () => this.filterChampions());\n      } else {\n        this.setState({\n          championsDifficultyFilter: difficulty\n        }, () => this.filterChampions());\n      }\n    };\n\n    this.searchSummoner = summonerName => {\n      let obj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\" // Authorization: `Bearer ${localStorage.token}`\n\n        },\n        body: JSON.stringify({\n          summonerName\n        })\n      };\n      fetch('http://localhost:3000/search_summoner', obj).then(resp => resp.json()).then(summoner => this.setState({\n        summoner\n      }));\n    };\n\n    this.showMatches = () => {\n      fetch(`http://localhost:3000/show_matches`).then(resp => resp.json()).then(matches => this.setState({\n        matches,\n        displayMatches: true\n      }));\n    };\n\n    this.showChampions = () => {\n      this.setState({\n        displayMatches: false\n      });\n    };\n\n    this.setChampionId = championId => {\n      fetch(`http://localhost:3000/champions/${championId}`).then(res => res.json()).then(champion => this.setState({\n        displayChampion: champion\n      }));\n    };\n\n    this.checkForLogin = () => {\n      let obj = {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      };\n      fetch(\"http://localhost:3000/summoner_profiles\", obj).then(res => res.json()).then(data => {\n        let summonerLoginStatus = data.errors ? {\n          errors: data.errors\n        } : {};\n        this.setState({\n          summonerLoginStatus\n        });\n        setTimeout(() => {\n          this.setState({\n            summonerLoginStatus: {}\n          });\n        }, 1000);\n      });\n    };\n\n    this.displayMessage = message => {\n      let login_status = message === \"Login Success\" ? true : false;\n      this.setState({\n        display_message: true,\n        message_class: \"alert alert-success fade\",\n        message_text: message,\n        login_status\n      });\n      setTimeout(() => {\n        this.setState({\n          display_message: false,\n          message_class: \"\",\n          message_text: \"\",\n          summoner: {}\n        });\n      }, 3000);\n      ;\n    };\n\n    this.state = {\n      summonerProfile: {},\n      // setState when searching API for a specific summoner profile\n      champions: [],\n      displayChampions: [],\n      loadingChampions: true,\n      displayChampion: {},\n      championsSearchTerm: \"\",\n      championsSortType: \"\",\n      championsRoleFilters: [],\n      championsDifficultyFilter: \"\",\n      display_message: false,\n      message_class: \"\",\n      message_text: \"\",\n      login_status: false,\n      summoner: {},\n      summonerLoginStatus: {},\n      matches: [],\n      displayMatches: false\n    };\n  }\n\n  componentDidMount() {\n    localStorage.clear();\n    fetch('http://localhost:3000/champions').then(r => r.json()).then(champions => {\n      this.setState({\n        champions: champions,\n        displayChampions: champions\n      }, () => this.setState({\n        loadingChampions: false\n      }));\n    });\n  }\n\n  // addSummonerProfile = (profile) => {\n  //   let obj = {\n  //     method: \"PATCH\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({\n  //       profile\n  //     })\n  //   }\n  //   fetch(\"http://localhost:3000/users/1\",obj)\n  //   .then(res => res.json())\n  //   .then(data => console.log(data))\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.message_class} message`,\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, this.state.display_message ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 43\n      }\n    }, this.state.message_text) : \"\"), /*#__PURE__*/React.createElement(NavBar, {\n      displayMessage: this.displayMessage,\n      login_status: this.state.login_status,\n      checkForLogin: this.checkForLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routerProps => /*#__PURE__*/React.createElement(Login, Object.assign({}, routerProps, {\n        displayMessage: this.displayMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: SignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/champion\",\n      render: routerProps => /*#__PURE__*/React.createElement(ChampionInfo, Object.assign({}, routerProps, {\n        displayChampion: this.state.displayChampion,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/summoner\",\n      render: routerProps => /*#__PURE__*/React.createElement(SummonerContainer, Object.assign({}, routerProps, {\n        searchSummoner: this.searchSummoner,\n        summoner: this.state.summoner,\n        summonerLoginStatus: this.state.summonerLoginStatus,\n        showMatches: this.showMatches,\n        checkForLogin: this.checkForLogin,\n        matches: this.state.matches,\n        displayMatches: this.state.displayMatches,\n        showChampions: this.showChampions // summonerLoginStatus = {this.state.summonerLoginStatus}\n        ,\n        champions: this.state.champions,\n        setChampionId: this.setChampionId,\n        addSummonerProfile: this.addSummonerProfile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/champions\",\n      render: routerProps => /*#__PURE__*/React.createElement(ChampionsContainer, Object.assign({}, routerProps, {\n        champions: this.state.displayChampions,\n        loadingChampions: this.state.loadingChampions,\n        setChampionId: this.setChampionId,\n        searchChampions: this.searchChampions,\n        championsSearchTerm: this.state.championsSearchTerm,\n        championsSortType: this.state.championsSortType,\n        championsRoleFilters: this.state.championsRoleFilters,\n        championsDifficultyFilter: this.state.championsDifficultyFilter,\n        sortChampionsByType: this.sortChampionsByType,\n        filterChampionsByRole: this.filterChampionsByRole,\n        filterChampionsByDifficulty: this.filterChampionsByDifficulty,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 4/league_tracker/frontend/src/containers/MainContainer.js"],"names":["React","SummonerContainer","ChampionsContainer","Login","SignUp","NavBar","ChampionInfo","BrowserRouter","Router","Route","MainContainer","Component","constructor","filterChampions","filteredChampions","state","championsSearchTerm","champions","forEach","champion","name","toLowerCase","includes","push","championsRoleFilters","length","filter","checkIfChampionRolesMatchFilter","championsDifficultyFilter","minDifficulty","maxDifficulty","info","difficulty","sortChampions","newDisplayChampions","displayChampions","championsSortType","sort","a","b","localeCompare","id","console","log","setState","searchChampions","term","sortChampionsByType","type","filterChampionsByRole","role","r","splice","indexOf","shift","every","roles","filterChampionsByDifficulty","searchSummoner","summonerName","obj","method","headers","body","JSON","stringify","fetch","then","resp","json","summoner","showMatches","matches","displayMatches","showChampions","setChampionId","championId","res","displayChampion","checkForLogin","Authorization","localStorage","token","data","summonerLoginStatus","errors","setTimeout","displayMessage","message","login_status","display_message","message_class","message_text","summonerProfile","loadingChampions","componentDidMount","clear","render","routerProps","addSummonerProfile"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SummonerContainer from './SummonerContainer.js'\nimport ChampionsContainer from './ChampionsContainer.js'\nimport Login from '../components/Login'\nimport SignUp from '../components/SignUp'\nimport NavBar from '../components/NavBar'\nimport ChampionInfo from '../components/ChampionInfo'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\n\nexport default class MainContainer extends React.Component {\n  constructor() {\n    super()\n\n    this.state={\n      summonerProfile: {}, // setState when searching API for a specific summoner profile\n      champions: [],\n      displayChampions: [],\n      loadingChampions: true,\n      displayChampion: {},\n      championsSearchTerm: \"\",\n      championsSortType: \"\",\n      championsRoleFilters: [],\n      championsDifficultyFilter: \"\",\n      display_message: false,\n      message_class: \"\",\n      message_text: \"\",\n      login_status: false,\n      summoner: {},\n      summonerLoginStatus: {},\n      matches: [],\n      displayMatches: false,\n    }\n  }\n\n  componentDidMount() {\n    localStorage.clear()\n    fetch('http://localhost:3000/champions')\n    .then(r => r.json())\n    .then(champions => {\n      this.setState({\n        champions: champions,\n        displayChampions: champions\n      }, ()=>this.setState({ loadingChampions: false }))\n    })\n  }\n\n  filterChampions = () => {\n    let filteredChampions = []\n\n    // search by name\n    if (this.state.championsSearchTerm) {\n      this.state.champions.forEach(champion => {if (champion.name.toLowerCase().includes(this.state.championsSearchTerm.toLowerCase())) filteredChampions.push(champion)})\n    } else {\n      filteredChampions = this.state.champions\n    }\n\n    // filter by role\n    if (this.state.championsRoleFilters.length > 0) {\n      filteredChampions = filteredChampions.filter(champion => this.checkIfChampionRolesMatchFilter(champion))\n    }\n\n    // filter by difficulty\n    if (this.state.championsDifficultyFilter) {\n      let minDifficulty = 0\n      let maxDifficulty = 0\n      switch (this.state.championsDifficultyFilter) {\n        case 'easy':\n          minDifficulty = 1\n          maxDifficulty = 3\n          break\n        case 'medium':\n          minDifficulty = 4\n          maxDifficulty = 7\n          break\n        case 'hard':\n          minDifficulty = 8\n          maxDifficulty = 10\n          break\n        default:\n      }\n      filteredChampions = filteredChampions.filter(champion => champion.info.difficulty >= minDifficulty && champion.info.difficulty <= maxDifficulty)\n    }\n\n    this.sortChampions(filteredChampions)\n  }\n\n  sortChampions = (newDisplayChampions=[...this.state.displayChampions]) => {\n\n    switch (this.state.championsSortType) {\n      case 'alphabetically':\n        newDisplayChampions.sort((a,b) => a.name.localeCompare(b.name))\n        break\n      default:\n        newDisplayChampions.sort((a,b) => a.id - b.id)\n    }\n    console.log(newDisplayChampions)\n\n    this.setState({\n      displayChampions: newDisplayChampions\n    })\n  }\n\n  // consider using debounce\n  searchChampions = (term) => {\n    this.setState({ championsSearchTerm: term },\n      ()=>this.filterChampions())\n  }\n  \n  sortChampionsByType = (type) => {\n    if (this.state.championsSortType === type) {\n      this.setState({ championsSortType: \"\" },\n        ()=>this.sortChampions())\n    } else {\n      this.setState({ championsSortType: type },\n        ()=>this.sortChampions())\n    }\n  }\n\n  filterChampionsByRole = (role) => {\n    if (this.state.championsRoleFilters.includes(role)) {\n      for (const r of this.state.championsRoleFilters) {\n        if (r === role) {\n          this.state.championsRoleFilters.splice(this.state.championsRoleFilters.indexOf(r), 1)\n        }\n      }\n    } else {\n      this.state.championsRoleFilters.push(role)\n      if (this.state.championsRoleFilters.length > 2) {\n        this.state.championsRoleFilters.shift()\n      }\n    }\n    this.filterChampions()\n  }\n\n  checkIfChampionRolesMatchFilter = (champion) => {\n    return this.state.championsRoleFilters.every(r => champion.roles.includes(r))\n  }\n\n  filterChampionsByDifficulty = (difficulty) => {\n    if (this.state.championsDifficultyFilter === difficulty) {\n      this.setState({ championsDifficultyFilter: \"\" },\n        ()=>this.filterChampions())\n    } else {\n      this.setState({ championsDifficultyFilter: difficulty },\n        ()=>this.filterChampions())\n    }\n  }\n\n  searchSummoner = (summonerName) => {\n    let obj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        summonerName\n      })\n    }\n    fetch('http://localhost:3000/search_summoner',obj)\n      .then(resp => resp.json())\n      .then(summoner => this.setState({summoner}))\n  }\n\n  showMatches = () => {\n    fetch(`http://localhost:3000/show_matches`)\n      .then(resp => resp.json())\n      .then(matches => this.setState({\n          matches,\n          displayMatches: true \n      }))\n  }\n\n  showChampions = () =>{\n    this.setState({\n      displayMatches: false\n    })\n  }\n  \n  setChampionId = (championId) => {\n    fetch(`http://localhost:3000/champions/${championId}`)\n    .then(res => res.json())\n    .then(champion => this.setState({displayChampion: champion}))\n  }\n\n  checkForLogin = () => {\n    let obj = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    }\n    fetch(\"http://localhost:3000/summoner_profiles\",obj)\n    .then(res => res.json())\n    .then(data => {\n      let summonerLoginStatus = data.errors ? {errors: data.errors} : {}\n      this.setState({summonerLoginStatus})\n      setTimeout(() => {\n        this.setState({summonerLoginStatus: {}})\n      }, 1000);\n    })\n  }\n\n  displayMessage = (message) => {\n    let login_status = message === \"Login Success\" ? true : false\n    this.setState({\n      display_message: true, \n      message_class: \"alert alert-success fade\",\n      message_text: message,\n      login_status\n    })\n\n    setTimeout(() => {\n      this.setState({\n        display_message: false,\n        message_class: \"\",\n        message_text: \"\",\n        summoner: {}\n      })\n    }, 3000);;\n  }\n  \n  // addSummonerProfile = (profile) => {\n  //   let obj = {\n  //     method: \"PATCH\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({\n  //       profile\n  //     })\n  //   }\n  //   fetch(\"http://localhost:3000/users/1\",obj)\n  //   .then(res => res.json())\n  //   .then(data => console.log(data))\n  // }\n\n  render() {\n    return(\n      <Router>\n        <div>\n          <div \n            className={`${this.state.message_class} message`} \n            role=\"alert\"\n            >\n            {this.state.display_message ? <h4>{this.state.message_text}</h4> : \"\" }\n          </div>\n\n          <NavBar \n            displayMessage = {this.displayMessage} \n            login_status = {this.state.login_status} \n            checkForLogin = {this.checkForLogin}\n          />\n\n          <Route exact path = \"/login\" render = {(routerProps) => \n            <Login \n              {...routerProps} \n              displayMessage = {this.displayMessage}\n            />}\n          /> \n\n          <Route exact path = \"/signup\" component = {SignUp} /> \n\n          <Route exact path = \"/champion\" render = {(routerProps) => \n            <ChampionInfo \n              {...routerProps} \n              displayChampion={this.state.displayChampion}\n            />}\n          /> \n\n          <Route exact path = \"/summoner\" render = {(routerProps) => \n            <SummonerContainer {...routerProps} \n              searchSummoner = {this.searchSummoner} \n              summoner = {this.state.summoner}\n              summonerLoginStatus = {this.state.summonerLoginStatus}\n              showMatches={this.showMatches}\n              checkForLogin = {this.checkForLogin}\n              matches={this.state.matches}\n              displayMatches={this.state.displayMatches}\n              showChampions={this.showChampions}\n              \n              // summonerLoginStatus = {this.state.summonerLoginStatus}\n              champions = {this.state.champions}\n              setChampionId={this.setChampionId}\n              addSummonerProfile = {this.addSummonerProfile}\n            />}\n          />\n\n          <Route exact path = \"/champions\" render = {(routerProps) => \n            <ChampionsContainer \n              {...routerProps}\n              champions={this.state.displayChampions}\n              loadingChampions={this.state.loadingChampions}\n              setChampionId={this.setChampionId}\n              searchChampions={this.searchChampions}\n              championsSearchTerm={this.state.championsSearchTerm}\n              championsSortType={this.state.championsSortType}\n              championsRoleFilters={this.state.championsRoleFilters}\n              championsDifficultyFilter={this.state.championsDifficultyFilter}\n              sortChampionsByType={this.sortChampionsByType}\n              filterChampionsByRole={this.filterChampionsByRole}\n              filterChampionsByDifficulty={this.filterChampionsByDifficulty}\n            />}\n          /> \n        </div>\n        </Router>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}