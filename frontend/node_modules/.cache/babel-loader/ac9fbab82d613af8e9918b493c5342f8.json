{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 4/league_tracker/frontend/src/containers/ChampionsContainer.js\";\nimport React from 'react';\nimport ChampionCard from '../components/ChampionCard.js';\nimport ChampionSearchBar from '../components/ChampionSearchBar.js';\nimport { Grid, Card, Placeholder } from 'semantic-ui-react';\nconst placeholders = [];\n\nfor (let i = 0; i < 16; i++) {\n  placeholders.push(\n  /*#__PURE__*/\n  // <Grid.Column >\n  //   <Placeholder style={{width: 150, height: 150}}>\n  //     <Placeholder.Image />\n  //     <Placeholder.Line />\n  //   </Placeholder>\n  // </Grid.Column>\n  React.createElement(Card, {\n    style: {\n      color: 'black',\n      fontWeight: 'bold'\n    } // color='teal'\n    // image={props.champion.icon_image}\n    // description={`${props.champion.name}, ${props.champion.title}`}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Placeholder, {\n    size: \"medium\" // floated='left'\n    ,\n    src: props.champion.icon_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  })));\n}\n\nexport default class ChampionsContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.generateRows = (array, i) => {\n      return /*#__PURE__*/React.createElement(Grid.Row, {\n        inverted: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 12\n        }\n      }, array.slice(i, i + 4).map(el => el));\n    };\n\n    this.generatePlaceholderRows = (array, numberOfRows) => {\n      // abstract to create rows for both placeholders and for champions\n      const rows = [];\n\n      for (let i = 0; i < numberOfRows; i++) {\n        rows.push(this.generateRows(array, i * 4));\n      }\n\n      return rows;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '1200px',\n        margin: '0px 0px',\n        position: 'relative',\n        left: '50vw',\n        transform: 'translateX(-50%)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ChampionSearchBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Card.Group, {\n      itemsPerRow: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, this.props.champions.length > 0 ? this.props.champions.map(champion => /*#__PURE__*/React.createElement(ChampionCard, {\n      champion: champion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 48\n      }\n    })) : this.generatePlaceholderRows(placeholders, 4)));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 4/league_tracker/frontend/src/containers/ChampionsContainer.js"],"names":["React","ChampionCard","ChampionSearchBar","Grid","Card","Placeholder","placeholders","i","push","color","fontWeight","props","champion","icon_image","ChampionsContainer","Component","generateRows","array","slice","map","el","generatePlaceholderRows","numberOfRows","rows","render","width","margin","position","left","transform","champions","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ChampionCard from '../components/ChampionCard.js'\nimport ChampionSearchBar from '../components/ChampionSearchBar.js'\nimport { Grid, Card, Placeholder } from 'semantic-ui-react'\n\nconst placeholders = []\nfor (let i = 0; i < 16; i++) {\n  placeholders.push(\n    // <Grid.Column >\n    //   <Placeholder style={{width: 150, height: 150}}>\n    //     <Placeholder.Image />\n    //     <Placeholder.Line />\n    //   </Placeholder>\n    // </Grid.Column>\n    <Card\n    style={{color: 'black', fontWeight: 'bold'}}\n    // color='teal'\n    // image={props.champion.icon_image}\n    // description={`${props.champion.name}, ${props.champion.title}`}\n    >\n      <Card.Content>\n    <Placeholder\n      size='medium'\n      // floated='left'\n      src={props.champion.icon_image} />\n    </Card.Content>\n    <Card.Content>\n      \n    </Card.Content>\n  </Card>\n  )\n}\n\nexport default class ChampionsContainer extends React.Component {\n\n  generateRows = (array, i) => {\n    return <Grid.Row inverted>\n      {array.slice(i, i+4).map(el => el)}\n    </Grid.Row>\n  }\n\n  generatePlaceholderRows = (array, numberOfRows) => { // abstract to create rows for both placeholders and for champions\n    const rows = []\n    for (let i = 0; i < numberOfRows; i++) {\n      rows.push(this.generateRows(array, i*4))\n    }\n    return rows\n  }\n\n  render() {\n    return(\n      <div style={{width: '1200px', margin: '0px 0px', position: 'relative', left: '50vw', transform: 'translateX(-50%)'}}>\n        <ChampionSearchBar />\n        {/* <Grid columns={4} divided inverted padded> */}\n        <Card.Group\n          itemsPerRow={4}>\n          {/* need to slice each row to get vertical dividers */}\n\n          {this.props.champions.length > 0 ?\n          this.props.champions.map(champion => <ChampionCard champion={champion} />) : this.generatePlaceholderRows(placeholders, 4)}\n          {/* // this.generateRows(this.props.champions.map(champion => <ChampionCard champion={champion} />), 0) : null}\n\n          // {this.props.champions.length > 0 ? */}\n          {/* // this.generateRows(this.props.champions.map(champion => <ChampionCard champion={champion} />), 4) : null} */}\n\n          {/* // {this.props.champions.length > 0 ? */}\n          {/* // this.generateRows(this.props.champions.map(champion => <ChampionCard champion={champion} />), 8) : null} */}\n          {/* <Grid.Row>\n            {this.props.champions.length > 0 ?\n            this.props.champions.slice(4,8).map(champion => <ChampionCard champion={champion} />) : console.log('No Champions!')}\n          </Grid.Row> */}\n        {/* </Grid> */}\n        </Card.Group>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}