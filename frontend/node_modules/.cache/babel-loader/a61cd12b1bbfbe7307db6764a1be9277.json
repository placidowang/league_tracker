{"ast":null,"code":"var _jsxFileName = \"/Users/vienpham/Desktop/league_tracker/frontend/src/components/SignUp.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nexport default class SignUp extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSignUP = () => {\n      let obj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          password_confirmation: this.state.password_confirmation\n        })\n      };\n      fetch(\"http://localhost:3000/user_signup\", obj).then(res => res.json()).then(data => {\n        let username_errors = [];\n        let password_errors = [];\n        let username_has_errors = false;\n        let password_has_errors = false;\n        let errors = \"false\";\n\n        if (data.errors) {\n          if (data.errors.username) {\n            username_errors = data.errors.username;\n            username_has_errors = true;\n          }\n\n          if (data.errors.password) {\n            password_errors = data.errors.password;\n            password_has_errors = true;\n          }\n\n          errors = \"true\";\n        }\n\n        this.setState({\n          username_errors,\n          username_has_errors,\n          password_errors,\n          password_has_errors,\n          errors\n        });\n      });\n    };\n\n    this.state = {\n      username_errors: \"\",\n      password_errors: \"\",\n      username_has_errors: false,\n      password_has_errors: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login_container shadow-lg p-3 mb-5 bg-white rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Sign Up\"), this.state.errors === \"true\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, this.state.username_has_errors ? this.state.username_errors.map(error => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 103\n      }\n    }, `Username ${error}`)) : \"\", this.state.password_has_errors ? this.state.password_errors.map(error => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 103\n      }\n    }, `Password ${error}`)) : \"\") : this.state.errors === \"false\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Sign up success\") : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group login_content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: this.state.username_has_errors ? \"form-control is-invalid\" : Array.isArray(this.state.username_errors) ? \"form-control is-valid\" : \"form-control\",\n      name: \"username\",\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group login_content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: this.state.password_has_errors ? \"form-control is-invalid\" : Array.isArray(this.state.password_errors) ? \"form-control is-valid\" : \"form-control\",\n      name: \"password\",\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group login_content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Password Confirmation\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: this.state.password_errors[0] ? \"form-control is-invalid\" : Array.isArray(this.state.password_errors) ? \"form-control is-valid\" : \"form-control\",\n      name: \"password_confirmation\",\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success\",\n      onClick: () => this.handleSignUP(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"Login\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/vienpham/Desktop/league_tracker/frontend/src/components/SignUp.js"],"names":["React","Component","NavLink","SignUp","constructor","handleChange","e","setState","target","name","value","handleSignUP","obj","method","headers","body","JSON","stringify","username","state","password","password_confirmation","fetch","then","res","json","data","username_errors","password_errors","username_has_errors","password_has_errors","errors","render","map","error","Array","isArray"],"mappings":"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","sourcesContent":["import React , {Component} from 'react'\n\nimport {NavLink} from 'react-router-dom'\n\nexport default class SignUp extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            username_errors: \"\",\n            password_errors: \"\",\n            username_has_errors: false,\n            password_has_errors: false,\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSignUP = () => {\n        let obj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n                password_confirmation: this.state.password_confirmation\n            })\n        }\n        fetch(\"http://localhost:3000/user_signup\",obj)\n        .then(res => res.json())\n        .then(data => {\n            let username_errors = []\n            let password_errors = []\n            let username_has_errors = false\n            let password_has_errors = false\n            let errors = \"false\"\n            if(data.errors){\n                if(data.errors.username){\n                    username_errors = data.errors.username\n                    username_has_errors = true \n                }\n                if(data.errors.password){\n                    password_errors = data.errors.password\n                    password_has_errors = true\n                }\n                errors = \"true\"\n            }\n            this.setState({username_errors,username_has_errors,password_errors,password_has_errors,errors})\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"login_container shadow-lg p-3 mb-5 bg-white rounded\">\n                <h1>Sign Up</h1>\n                {\n                    this.state.errors === \"true\" ? \n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {this.state.username_has_errors ? this.state.username_errors.map(error => <li>{`Username ${error}`}</li>) : \"\"}\n                            {this.state.password_has_errors ? this.state.password_errors.map(error => <li>{`Password ${error}`}</li>) : \"\"}\n                        </div>\n                    : this.state.errors === \"false\" ? \n                        <div className=\"alert alert-success\" role=\"alert\">\n                            Sign up success\n                        </div>\n                    : \"\"\n                }\n                <div class=\"form-group login_content\">\n                    <h3 >Username</h3>\n                    <input type=\"text\" className={\n                        this.state.username_has_errors ? \"form-control is-invalid\"\n                        : Array.isArray(this.state.username_errors) ? \"form-control is-valid\"\n                        : \"form-control\"} name=\"username\" onChange = {(e) => this.handleChange(e)}/>\n                </div>\n                <br/>\n                <div class=\"form-group login_content\">\n                    <h3 >Password</h3>\n                    <input type=\"password\" className={\n                        this.state.password_has_errors ? \"form-control is-invalid\"\n                        : Array.isArray(this.state.password_errors) ? \"form-control is-valid\"\n                        : \"form-control\"} name=\"password\" onChange = {(e) => this.handleChange(e)}/>\n                </div>\n                <br/>\n                <div class=\"form-group login_content\">\n                    <h3 >Password Confirmation</h3>\n                    <input type=\"password\" className={\n                        this.state.password_errors[0] ? \"form-control is-invalid\"\n                        : Array.isArray(this.state.password_errors) ? \"form-control is-valid\"\n                        : \"form-control\"} name=\"password_confirmation\" onChange = {(e) => this.handleChange(e)}/>\n                </div>\n                <br/>\n                <button className=\"btn btn-outline-success\" onClick={() => this.handleSignUP()}>Sign Up</button>\n                <br/>\n                <button className=\"btn btn-outline-success\">\n                    <NavLink to ='/login'>Login</NavLink>\n                </button>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}