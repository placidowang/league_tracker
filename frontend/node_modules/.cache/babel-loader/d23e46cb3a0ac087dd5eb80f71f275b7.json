{"ast":null,"code":"var _jsxFileName = \"/Users/vienpham/Desktop/league_tracker/frontend/src/containers/MainContainer.js\";\nimport React from 'react';\nimport SummonerContainer from './SummonerContainer.js';\nimport ChampionsContainer from './ChampionsContainer.js';\nimport Login from '../components/Login';\nimport SignUp from '../components/SignUp';\nimport NavBar from '../components/NavBar';\nimport ChampionInfo from '../components/ChampionInfo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nexport default class MainContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.displayMessage = message => {\n      let login_status = message === \"Login Success\" ? true : false;\n      this.setState({\n        display_message: true,\n        message_class: \"alert alert-success fade\",\n        message_text: message,\n        login_status\n      });\n      setTimeout(() => {\n        this.setState({\n          display_message: false,\n          message_class: \"\",\n          message_text: \"\",\n          summoner: {}\n        });\n      }, 3000);\n      ;\n    };\n\n    this.sortChampions = () => {};\n\n    this.searchChampions = () => {};\n\n    this.searchSummoner = () => {\n      let obj = {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      };\n      fetch('http://localhost:3000/search_summoner', obj).then(resp => resp.json()).then(summoner => this.setState({\n        summoner\n      }));\n    };\n\n    this.setChampionId = championId => {\n      fetch(`http://localhost:3000/champions/${championId}`).then(res => res.json()).then(champion => this.setState({\n        displayChampion: champion\n      }));\n    };\n\n    this.checkForLogin = () => {\n      let obj = {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      };\n      fetch(\"http://localhost:3000/summoner_profiles\", obj).then(res => res.json()).then(data => {\n        console.log(data); // let summonerLoginStatus = data.errors ? {errors: data.errors} : {}\n        // this.setState({summonerLoginStatus})\n      });\n    };\n\n    this.state = {\n      summonerProfile: {},\n      // setState when searching API for a specific summoner profile\n      champions: [],\n      displayChampions: [],\n      displayChampion: {},\n      display_message: false,\n      message_class: \"\",\n      message_text: \"\",\n      login_status: false,\n      summoner: {},\n      summonerLoginStatus: {\n        errors: \"Please Login!\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    localStorage.clear();\n    fetch('http://localhost:3000/champions').then(r => r.json()).then(champions => {\n      this.setState({\n        champions: champions,\n        displayChampions: champions\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.message_class} message`,\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, this.state.display_message ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 43\n      }\n    }, this.state.message_text) : \"\"), /*#__PURE__*/React.createElement(NavBar, {\n      displayMessage: this.displayMessage,\n      login_status: this.state.login_status,\n      checkForLogin: this.checkForLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routerProps => /*#__PURE__*/React.createElement(Login, Object.assign({}, routerProps, {\n        displayMessage: this.displayMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 67\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: SignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/champion\",\n      render: routerProps => /*#__PURE__*/React.createElement(ChampionInfo, Object.assign({}, routerProps, {\n        displayChampion: this.state.displayChampion,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 70\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/summoner\",\n      render: routerProps => /*#__PURE__*/React.createElement(SummonerContainer, Object.assign({}, routerProps, {\n        searchSummoner: this.searchSummoner,\n        summoner: this.state.summoner,\n        summonerLoginStatus: this.state.summonerLoginStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/champions\",\n      render: routerProps => /*#__PURE__*/React.createElement(ChampionsContainer, Object.assign({}, routerProps, {\n        champions: this.state.displayChampions,\n        setChampionId: this.setChampionId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/vienpham/Desktop/league_tracker/frontend/src/containers/MainContainer.js"],"names":["React","SummonerContainer","ChampionsContainer","Login","SignUp","NavBar","ChampionInfo","BrowserRouter","Router","Route","MainContainer","Component","constructor","displayMessage","message","login_status","setState","display_message","message_class","message_text","setTimeout","summoner","sortChampions","searchChampions","searchSummoner","obj","method","headers","Authorization","localStorage","token","fetch","then","resp","json","setChampionId","championId","res","champion","displayChampion","checkForLogin","data","console","log","state","summonerProfile","champions","displayChampions","summonerLoginStatus","errors","componentDidMount","clear","r","render","routerProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SummonerContainer from './SummonerContainer.js'\nimport ChampionsContainer from './ChampionsContainer.js'\nimport Login from '../components/Login'\nimport SignUp from '../components/SignUp'\nimport NavBar from '../components/NavBar'\nimport ChampionInfo from '../components/ChampionInfo'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\n\nexport default class MainContainer extends React.Component {\n  constructor() {\n    super()\n\n    this.state={\n      summonerProfile: {}, // setState when searching API for a specific summoner profile\n      champions: [],\n      displayChampions: [],\n      displayChampion: {},\n      display_message: false,\n      message_class: \"\",\n      message_text: \"\",\n      login_status: false,\n      summoner: {},\n      summonerLoginStatus: {errors: \"Please Login!\"}\n    }\n  }\n\n  componentDidMount() {\n    localStorage.clear()\n    fetch('http://localhost:3000/champions')\n    .then(r => r.json())\n    .then(champions => {\n      this.setState({\n        champions: champions,\n        displayChampions: champions\n      },\n      )\n    })\n  }\n\n  displayMessage = (message) => {\n    let login_status = message === \"Login Success\" ? true : false\n    this.setState({\n      display_message: true, \n      message_class: \"alert alert-success fade\",\n      message_text: message,\n      login_status\n    })\n\n    setTimeout(() => {\n      this.setState({\n        display_message: false,\n        message_class: \"\",\n        message_text: \"\",\n        summoner: {}\n      })\n    }, 3000);;\n  }\n\n  sortChampions = () => {\n\n  }\n\n  searchChampions = () => {\n\n  }\n\n\n  searchSummoner = () => {\n    let obj = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    }\n    fetch('http://localhost:3000/search_summoner',obj)\n      .then(resp => resp.json())\n      .then(summoner => this.setState({summoner}))\n  }\n  \n  setChampionId = (championId) => {\n    fetch(`http://localhost:3000/champions/${championId}`)\n    .then(res => res.json())\n    .then(champion => this.setState({displayChampion: champion}))\n\n  }\n\n  checkForLogin = () => {\n    let obj = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    }\n    fetch(\"http://localhost:3000/summoner_profiles\",obj)\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      // let summonerLoginStatus = data.errors ? {errors: data.errors} : {}\n      // this.setState({summonerLoginStatus})\n    })\n  }\n\n  render() {\n    return(\n      <Router>\n        <div>\n          <div \n            className={`${this.state.message_class} message`} \n            role=\"alert\"\n            >\n            {this.state.display_message ? <h4>{this.state.message_text}</h4> : \"\" }\n          </div>\n          <NavBar displayMessage = {this.displayMessage} login_status = {this.state.login_status} checkForLogin = {this.checkForLogin}/>\n          <Route exact path = \"/login\" render = {(routerProps) => <Login {...routerProps} displayMessage = {this.displayMessage}/>} /> \n          <Route exact path = \"/signup\" component = {SignUp} /> \n          <Route exact path = \"/champion\" render = {(routerProps) => <ChampionInfo {...routerProps} displayChampion={this.state.displayChampion}/>} /> \n          <Route exact path = \"/summoner\" render = {(routerProps) => \n            <SummonerContainer {...routerProps} \n              searchSummoner = {this.searchSummoner} \n              summoner = {this.state.summoner}\n              summonerLoginStatus = {this.state.summonerLoginStatus}\n            />}/>\n            <Route exact path = \"/champions\" render = {(routerProps) => \n              <ChampionsContainer \n                {...routerProps}\n                champions={this.state.displayChampions}\n                setChampionId={this.setChampionId}\n              />}/> \n        </div>\n        </Router>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}