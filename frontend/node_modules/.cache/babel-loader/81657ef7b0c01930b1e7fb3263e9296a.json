{"ast":null,"code":"var _jsxFileName = \"/home/mitchell/Flatiron/Module4/league_tracker/frontend/src/containers/MainContainer.js\";\nimport React from 'react';\nimport SummonerContainer from './SummonerContainer.js';\nimport ChampionsContainer from './ChampionsContainer.js';\nimport Login from '../components/Login';\nimport SignUp from '../components/SignUp';\nimport NavBar from '../components/NavBar';\nimport ChampionInfo from '../components/ChampionInfo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nexport default class MainContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.displayMessage = message => {\n      let login_status = message === \"Login Success\" ? true : false;\n      this.setState({\n        display_message: true,\n        message_class: \"alert alert-success fade\",\n        message_text: message,\n        login_status\n      });\n      setTimeout(() => {\n        this.setState({\n          display_message: false,\n          message_class: \"\",\n          message_text: \"\",\n          summoner: {}\n        });\n      }, 3000);\n      ;\n    };\n\n    this.displayChampions = () => {\n      let newDisplayChampions = []; //search\n\n      newDisplayChampions = this.state.champions.filter(champion => champion.name.toLowerCase().includes(this.state.championsSearchTerm.toLowerCase())); //sort\n      //filter\n      //display\n\n      this.setState({\n        displayChampions: newDisplayChampions\n      });\n    };\n\n    this.searchChampions = term => {\n      this.setState({\n        championsSearchTerm: term\n      }, () => this.displayChampions());\n    };\n\n    this.sortChampions = type => {\n      this.setState({\n        championsSortType: type\n      });\n      this.displayChampions();\n    };\n\n    this.filterChampionsByRole = role => {};\n\n    this.searchSummoner = summonerName => {\n      let obj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\" // Authorization: `Bearer ${localStorage.token}`\n\n        },\n        body: JSON.stringify({\n          summonerName\n        })\n      };\n      fetch('http://localhost:3000/search_summoner', obj).then(resp => resp.json()).then(summoner => this.setState({\n        summoner\n      }));\n    };\n\n    this.showMatches = () => {\n      fetch(`http://localhost:3000/show_matches`).then(resp => resp.json()).then(matches => this.setState({\n        matches,\n        displayMatches: this.state.displayMatches === false ? this.state.displayMatches = true : this.state.displayMatches = false\n      }));\n    };\n\n    this.showChampions = () => setChampionId = championId => {\n      fetch(`http://localhost:3000/champions/${championId}`).then(res => res.json()).then(champion => this.setState({\n        displayChampion: champion\n      }));\n    };\n\n    this.checkForLogin = () => {\n      let obj = {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      };\n      fetch(\"http://localhost:3000/summoner_profiles\", obj).then(res => res.json()).then(data => {\n        let summonerLoginStatus = data.errors ? {\n          errors: data.errors\n        } : {};\n        this.setState({\n          summonerLoginStatus\n        });\n      });\n    };\n\n    this.state = {\n      summonerProfile: {},\n      // setState when searching API for a specific summoner profile\n      champions: [],\n      displayChampions: [],\n      displayChampion: {},\n      championsSearchTerm: \"\",\n      championsSortType: \"\",\n      championsRoleFilters: [],\n      championsDifficultyFilter: [],\n      display_message: false,\n      message_class: \"\",\n      message_text: \"\",\n      login_status: false,\n      summoner: {},\n      summonerLoginStatus: {\n        errors: \"Please Login!\"\n      },\n      matches: [],\n      displayMatches: false\n    };\n  }\n\n  componentDidMount() {\n    localStorage.clear();\n    fetch('http://localhost:3000/champions').then(r => r.json()).then(champions => {\n      this.setState({\n        champions: champions,\n        displayChampions: champions\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.message_class} message`,\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, this.state.display_message ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 43\n      }\n    }, this.state.message_text) : \"\"), /*#__PURE__*/React.createElement(NavBar, {\n      displayMessage: this.displayMessage,\n      login_status: this.state.login_status,\n      checkForLogin: this.checkForLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routerProps => /*#__PURE__*/React.createElement(Login, Object.assign({}, routerProps, {\n        displayMessage: this.displayMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: SignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/champion\",\n      render: routerProps => /*#__PURE__*/React.createElement(ChampionInfo, Object.assign({}, routerProps, {\n        displayChampion: this.state.displayChampion,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/summoner\",\n      render: routerProps => /*#__PURE__*/React.createElement(SummonerContainer, Object.assign({}, routerProps, {\n        searchSummoner: this.searchSummoner,\n        summoner: this.state.summoner,\n        summonerLoginStatus: this.state.summonerLoginStatus,\n        showMatches: this.showMatches,\n        matches: this.state.matches,\n        displayMatches: this.state.displayMatches // summonerLoginStatus = {this.state.summonerLoginStatus}\n        ,\n        champions: this.state.champions,\n        setChampionId: this.setChampionId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/champions\",\n      render: routerProps => /*#__PURE__*/React.createElement(ChampionsContainer, Object.assign({}, routerProps, {\n        champions: this.state.displayChampions,\n        setChampionId: this.setChampionId,\n        searchChampions: this.searchChampions,\n        championsSearchTerm: this.state.championsSearchTerm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/mitchell/Flatiron/Module4/league_tracker/frontend/src/containers/MainContainer.js"],"names":["React","SummonerContainer","ChampionsContainer","Login","SignUp","NavBar","ChampionInfo","BrowserRouter","Router","Route","MainContainer","Component","constructor","displayMessage","message","login_status","setState","display_message","message_class","message_text","setTimeout","summoner","displayChampions","newDisplayChampions","state","champions","filter","champion","name","toLowerCase","includes","championsSearchTerm","searchChampions","term","sortChampions","type","championsSortType","filterChampionsByRole","role","searchSummoner","summonerName","obj","method","headers","body","JSON","stringify","fetch","then","resp","json","showMatches","matches","displayMatches","showChampions","setChampionId","championId","res","displayChampion","checkForLogin","Authorization","localStorage","token","data","summonerLoginStatus","errors","summonerProfile","championsRoleFilters","championsDifficultyFilter","componentDidMount","clear","r","render","routerProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SummonerContainer from './SummonerContainer.js'\nimport ChampionsContainer from './ChampionsContainer.js'\nimport Login from '../components/Login'\nimport SignUp from '../components/SignUp'\nimport NavBar from '../components/NavBar'\nimport ChampionInfo from '../components/ChampionInfo'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\n\nexport default class MainContainer extends React.Component {\n  constructor() {\n    super()\n\n    this.state={\n      summonerProfile: {}, // setState when searching API for a specific summoner profile\n      champions: [],\n      displayChampions: [],\n      displayChampion: {},\n      championsSearchTerm: \"\",\n      championsSortType: \"\",\n      championsRoleFilters: [],\n      championsDifficultyFilter: [],\n      display_message: false,\n      message_class: \"\",\n      message_text: \"\",\n      login_status: false,\n      summoner: {},\n      summonerLoginStatus: {errors: \"Please Login!\"},\n      matches: [],\n      displayMatches: false,\n    }\n  }\n\n  componentDidMount() {\n    localStorage.clear()\n    fetch('http://localhost:3000/champions')\n    .then(r => r.json())\n    .then(champions => {\n      this.setState({\n        champions: champions,\n        displayChampions: champions\n      },\n      )\n    })\n  }\n\n  displayMessage = (message) => {\n    let login_status = message === \"Login Success\" ? true : false\n    this.setState({\n      display_message: true, \n      message_class: \"alert alert-success fade\",\n      message_text: message,\n      login_status\n    })\n\n    setTimeout(() => {\n      this.setState({\n        display_message: false,\n        message_class: \"\",\n        message_text: \"\",\n        summoner: {}\n      })\n    }, 3000);;\n  }\n\n  displayChampions = () => {\n    let newDisplayChampions = []\n\n    //search\n    newDisplayChampions = this.state.champions.filter(champion => champion.name.toLowerCase().includes(this.state.championsSearchTerm.toLowerCase()))\n\n    //sort\n\n    //filter\n\n    //display\n    this.setState({\n      displayChampions: newDisplayChampions\n    })\n  }\n\n  // consider using debounce\n  searchChampions = (term) => {\n    this.setState({ championsSearchTerm: term },()=>this.displayChampions())\n  }\n  \n  sortChampions = (type) => {\n    this.setState({ championsSortType: type })\n    this.displayChampions()\n  }\n\n  filterChampionsByRole = (role) => {\n\n  }\n\n  \n\n\n  // searchSummoner = () => {\n  //   let obj = {\n  //     method: \"GET\",\n  //     headers: {\n  //       Authorization: `Bearer ${localStorage.token}`\n  //     }\n  //   }\n  //   fetch('http://localhost:3000/search_summoner',obj)\n  //     .then(resp => resp.json())\n  //     .then(summoner => console.log(summoner))\n  // }\n\n  searchSummoner = (summonerName) => {\n    let obj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        summonerName\n      })\n    }\n    fetch('http://localhost:3000/search_summoner',obj)\n      .then(resp => resp.json())\n      .then(summoner => this.setState({summoner}))\n  }\n\n  showMatches = () => {\n    fetch(`http://localhost:3000/show_matches`)\n      .then(resp => resp.json())\n      .then(matches => this.setState({\n          matches,\n          displayMatches: this.state.displayMatches === false ? this.state.displayMatches = true : this.state.displayMatches = false\n      }))\n  }\n\n  showChampions = () =>\n  \n  setChampionId = (championId) => {\n    fetch(`http://localhost:3000/champions/${championId}`)\n    .then(res => res.json())\n    .then(champion => this.setState({displayChampion: champion}))\n\n  }\n\n  checkForLogin = () => {\n    let obj = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    }\n    fetch(\"http://localhost:3000/summoner_profiles\",obj)\n    .then(res => res.json())\n    .then(data => {\n      let summonerLoginStatus = data.errors ? {errors: data.errors} : {}\n      this.setState({summonerLoginStatus})\n    })\n  }\n\n  render() {\n    return(\n      <Router>\n        <div>\n          <div \n            className={`${this.state.message_class} message`} \n            role=\"alert\"\n            >\n            {this.state.display_message ? <h4>{this.state.message_text}</h4> : \"\" }\n          </div>\n\n          <NavBar \n            displayMessage = {this.displayMessage} \n            login_status = {this.state.login_status} \n            checkForLogin = {this.checkForLogin}\n          />\n\n          <Route exact path = \"/login\" render = {(routerProps) => \n            <Login \n              {...routerProps} \n              displayMessage = {this.displayMessage}\n            />}\n          /> \n\n          <Route exact path = \"/signup\" component = {SignUp} /> \n\n          <Route exact path = \"/champion\" render = {(routerProps) => \n            <ChampionInfo \n              {...routerProps} \n              displayChampion={this.state.displayChampion}\n            />}\n          /> \n\n          <Route exact path = \"/summoner\" render = {(routerProps) => \n            <SummonerContainer {...routerProps} \n              searchSummoner = {this.searchSummoner} \n              summoner = {this.state.summoner}\n              summonerLoginStatus = {this.state.summonerLoginStatus}\n              showMatches={this.showMatches}\n              matches={this.state.matches}\n              displayMatches={this.state.displayMatches}\n              \n              // summonerLoginStatus = {this.state.summonerLoginStatus}\n              champions = {this.state.champions}\n              setChampionId={this.setChampionId}\n            />}\n          />\n\n          <Route exact path = \"/champions\" render = {(routerProps) => \n            <ChampionsContainer \n              {...routerProps}\n              champions={this.state.displayChampions}\n              setChampionId={this.setChampionId}\n              searchChampions={this.searchChampions}\n              championsSearchTerm={this.state.championsSearchTerm}\n            />}\n          /> \n        </div>\n        </Router>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}