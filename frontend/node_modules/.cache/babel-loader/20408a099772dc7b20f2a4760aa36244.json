{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 4/league_tracker/frontend/src/containers/ChampionsCardContainer.js\";\nimport React from 'react';\nimport ChampionCard from '../components/ChampionCard.js';\nimport { Card, Placeholder } from 'semantic-ui-react';\nconst placeholders = [];\n\nfor (let i = 0; i < 148; i++) {\n  placeholders.push( /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Placeholder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Placeholder.Image, {\n    inverted: true,\n    size: \"large\",\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Placeholder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Placeholder.Line, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  })))));\n}\n\nclass ChampionsCardContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.displayWithNoChampions = () => {\n      if (this.props.loadingChampions) {\n        this.props.setLoadingChampionsToFalse();\n      } else {\n        return 'no';\n      }\n    };\n\n    this.renderChampions = () => {\n      if (this.props.loadingChampions) {\n        console.log('placeholders');\n        return placeholders;\n      } else if (this.props.champions.length > 0) {\n        this.props.champions.map(champion => /*#__PURE__*/React.createElement(ChampionCard, {\n          history: this.props.history,\n          champion: champion,\n          setChampionId: this.props.setChampionId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }\n        }));\n      } else {\n        console.log('no placeholders');\n        return 'no';\n      }\n    };\n  }\n\n  // generateRows = (array, i) => {\n  //   return(\n  //     array.slice(i, i+4).map(el => el)\n  //   )\n  // }\n  // generatePlaceholderRows = (array, numberOfRows) => {\n  //   const rows = []\n  //   for (let i = 0; i < numberOfRows; i++) {\n  //     rows.push(this.generateRows(array, i*4))\n  //   }\n  //   return rows\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"champions-card-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, this.props.champions.length > 0 ? this.props.champions.map(champion => /*#__PURE__*/React.createElement(ChampionCard, {\n      history: this.props.history,\n      champion: champion,\n      setChampionId: this.props.setChampionId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    })) : this.displayWithNoChampions()));\n  }\n\n}\n\nexport default ChampionsCardContainer;","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 4/league_tracker/frontend/src/containers/ChampionsCardContainer.js"],"names":["React","ChampionCard","Card","Placeholder","placeholders","i","push","ChampionsCardContainer","Component","displayWithNoChampions","props","loadingChampions","setLoadingChampionsToFalse","renderChampions","console","log","champions","length","map","champion","history","setChampionId","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ChampionCard from '../components/ChampionCard.js'\nimport { Card, Placeholder } from 'semantic-ui-react'\n\nconst placeholders = []\nfor (let i = 0; i < 148; i++) {\n  placeholders.push(\n    <Card>\n      <Card.Content>\n        <Placeholder>\n          <Placeholder.Image inverted size='large' square />\n        </Placeholder>\n      </Card.Content>\n      <Card.Content>\n        <Placeholder>\n          <Placeholder.Line />\n        </Placeholder>\n      </Card.Content>\n    </Card>\n  )\n}\n\nclass ChampionsCardContainer extends React.Component {\n\n  displayWithNoChampions = () => {\n    if (this.props.loadingChampions) {\n      this.props.setLoadingChampionsToFalse()\n    } else {\n      return 'no'\n    }\n  }\n  \n  renderChampions = () => {\n    if (this.props.loadingChampions) {\n      console.log('placeholders')\n      return placeholders\n    } else if (this.props.champions.length > 0) {\n      this.props.champions.map(champion =>\n        <ChampionCard\n          history={this.props.history}\n          champion={champion}\n          setChampionId={this.props.setChampionId} />)\n    } else {\n      console.log('no placeholders')\n      return 'no'\n    }\n  }\n\n  // generateRows = (array, i) => {\n  //   return(\n  //     array.slice(i, i+4).map(el => el)\n  //   )\n  // }\n\n  // generatePlaceholderRows = (array, numberOfRows) => {\n  //   const rows = []\n  //   for (let i = 0; i < numberOfRows; i++) {\n  //     rows.push(this.generateRows(array, i*4))\n  //   }\n  //   return rows\n  // }\n\n  render() {\n    return(\n      <div id=\"champions-card-container\">\n          <Card.Group\n          //  itemsPerRow={4}\n           >\n            {this.props.champions.length > 0\n              ? this.props.champions.map(champion =>\n                <ChampionCard\n                  history={this.props.history}\n                  champion={champion}\n                  setChampionId={this.props.setChampionId} />)\n              : this.displayWithNoChampions()}\n          </Card.Group>\n      </div>\n    )\n  }\n}\n\nexport default ChampionsCardContainer"]},"metadata":{},"sourceType":"module"}